// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
}

model Profile {
  id String @id @default(uuid())
  userId String @unique
  name String
  imageUrl String @db.Text
  email String @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  members Member[]
  servers Server[]
  channels Channel[]

}

model Server {
  id String @id @default(uuid())
  name String 
  imageUrl String @db.Text
  inviteCode String @db.Text

  profileid String
  profile Profile @relation(fields: [profileid], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  members Member[]
  channels Channel[]
  @@index([profileid])
}

enum MemberRole {
  ADMIN
  MODERATOR
  GUEST
}

model Member {
   id String @id @default(uuid())
   role MemberRole @default(GUEST)
   
   server Server @relation(fields: [serverId], references: [id], onDelete: Cascade)
   serverId String
   
   profileid String 
   profile Profile @relation(fields: [profileid], references: [id], onDelete: Cascade)

   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt

   @@index([profileid])
   @@index([serverId])
}

enum ChannelType {
  TEXT
  AUDIO
  VIDEO
}

model Channel {
  id String @id @default(uuid())
  name String 
  type ChannelType @default(TEXT)

  profileId String 
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  
  serverId String 
  server Server @relation(fields: [serverId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([serverId])
  @@index([profileId])
}